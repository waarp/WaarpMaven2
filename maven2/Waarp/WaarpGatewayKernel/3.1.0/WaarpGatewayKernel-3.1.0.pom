<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>WaarpGatewayKernel</artifactId>
  <name>GoldenGate Gateway Kernel</name>
  <version>3.1.0</version>
  <description>Waarp Gateway contains the kernel for Http Gateway</description>
    <inceptionYear>2009</inceptionYear>
  <parent>
    <groupId>Waarp</groupId>
    <artifactId>persistence-deps</artifactId>
    <version>1.5</version>
  </parent>
  <issueManagement>
	<system>GitHub</system>
  	<url>https://github.com/waarp/WaarpGatewayKernel/issues/</url>
  </issueManagement>
  <scm>
  	<connection>scm:git:git://github.com/waarp/WaarpGatewayKernel.git</connection>
  	<developerConnection>scm:git:git@github.com:YourID/WaarpGatewayKernel.git</developerConnection>
  	<url>https://github.com/waarp/WaarpGatewayKernel</url>
  </scm>
  <licenses>
  	<license>
  		<name>GPL 3.0</name>
  		<url>LICENSE.txt</url>
  	</license>
  </licenses>
  <repositories>
  	<repository>
  		<id>waarp.releases</id>
  		<name>Waarp releases</name>
  		<url>https://raw.github.com/waarp/WaarpMaven2/master/maven2</url>
  		<releases>
  			<enabled>true</enabled>
  		</releases>
  		<snapshots>
  			<enabled>false</enabled>
  		</snapshots>
  	</repository>
  </repositories>
  <properties>
  	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  	<attach-distribution>false</attach-distribution>
    <filtermodule>**</filtermodule>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <version>1.16</version>
        <configuration>
          <signature>
            <groupId>org.codehaus.mojo.signature</groupId>
            <artifactId>java16</artifactId>
            <version>1.0</version>
          </signature>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <encoding>UTF-8</encoding>
            <source>1.6</source>
            <target>1.6</target>
            <optimize>true</optimize>
            <showDeprecations>true</showDeprecations>
          </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>write-version</id>
            <phase>compile</phase>
            <goals>
              <goal>run</goal>
	    	</goals>
            <configuration>
              <tasks>
                <mkdir dir="${project.build.directory}"/>
                <mkdir dir="${project.build.directory}/classes"/>
                <echo message="${project.version}" file="${project.build.directory}/version.txt" />
                <echo message="// DO NOT MODIFY - WILL BE OVERWRITTEN DURING THE BUILD PROCESS${line.separator}package org.waarp.gateway.kernel;${line.separator}/** Provides the version information of Waarp Gateway Http. */${line.separator}public final class Version {${line.separator} /** The version identifier. */${line.separator} public static final String ID = &quot;${project.version}&quot;;${line.separator} /** Prints out the version identifier to stdout. */${line.separator} public static void main(String[] args) { System.out.println(ID); }${line.separator} private Version() { super(); }${line.separator}}${line.separator}" file="${basedir}/src/main/java/org/waarp/gateway/kernel/Version.java" />
                <echo message="${project.artifactId}" />
                <taskdef resource="net/sf/antcontrib/antlib.xml" />
                <if>
                <equals arg1="${project.artifactId}" arg2="WaarpGatewayKernel"/>
                <then>
                	<mkdir dir="${project.build.directory}/site"/>
                </then>
                </if>
              </tasks>
            </configuration>
          </execution>
          <execution>
            <id>add-license</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <taskdef resource="net/sf/antcontrib/antlib.xml" />
                <if>
                  <or>
                    <equals arg2="jar" arg1="${project.packaging}" />
                    <equals arg2="bundle" arg1="${project.packaging}" />
                  </or>
                  <then>
                    <move file="${project.build.directory}/${project.build.finalName}.jar" tofile="${project.build.directory}/${project.build.finalName}.orig.jar" />
                    <zip destfile="${project.build.directory}/${project.build.finalName}.jar">
                      <zipfileset dir="${basedir}" prefix="META-INF/">
                        <include name="LICENSE.*" />
                        <include name="NOTICE.*" />
                        <include name="COPYRIGHT.*" />
                      </zipfileset>
                      <zipfileset dir="${basedir}/license" prefix="META-INF/license/">
                        <exclude name="**/.*/**" />
                        <include name="**" />
                      </zipfileset>
                      <zipfileset filemode="644" src="${project.build.directory}/${project.build.finalName}.orig.jar" dirmode="755">
                      </zipfileset>
                    </zip>
                    <delete file="${project.build.directory}/${project.build.finalName}.orig.jar" />
                    <move file="${project.build.directory}/${project.build.finalName}-sources.jar" tofile="${project.build.directory}/${project.build.finalName}-sources.orig.jar" />
                    <zip destfile="${project.build.directory}/${project.build.finalName}-sources.jar">
                      <zipfileset dir="${basedir}" prefix="META-INF/">
                        <include name="LICENSE.*" />
                        <include name="NOTICE.*" />
                        <include name="COPYRIGHT.*" />
                        <include name="**/Makefile" />
                      </zipfileset>
                      <zipfileset dir="${basedir}/license" prefix="META-INF/license/">
                        <exclude name="**/.*/**" />
                        <include name="**" />
                      </zipfileset>
                      <zipfileset filemode="644" src="${project.build.directory}/${project.build.finalName}-sources.orig.jar" dirmode="755">
                      	<exclude name="**/${filterexclude}/**" />
                        <include name="**/${filtermodule}/**" />
                      </zipfileset>
                    </zip>
                    <delete file="${project.build.directory}/${project.build.finalName}-sources.orig.jar" />
                  </then>
                </if>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.3</version>
        <inherited>false</inherited>
        <configuration>
          <rulesUri>file:///${session.executionRootDirectory}/maven-version-rules.xml</rulesUri>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <reporting>
  	<plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <configuration>
          <xmlOutput>true</xmlOutput>
          <xmlOutputDirectory>target/site</xmlOutputDirectory>
          <failOnError>false</failOnError>
          <effort>Default</effort>
        </configuration>
      </plugin>
      <plugin>
      	<groupId>org.apache.maven.plugins</groupId>
      	<artifactId>maven-pmd-plugin</artifactId>
      	<version>3.0.1</version>
      	<configuration>
      		<targetJdk>1.6</targetJdk>
      		<rulesets>
      			<ruleset>rulesets/java/basic.xml</ruleset>
      			<!-- <ruleset>rulesets/java/design.xml</ruleset>
      			<ruleset>rulesets/java/optimizations.xml</ruleset> -->
      		</rulesets>
      		<format>xml</format>
      		<linkXref>true</linkXref>
      		<sourceEncoding>utf-8</sourceEncoding>
      		<minimumTokens>100</minimumTokens>
      		<failOnViolation>false</failOnViolation>
      		<aggregate>true</aggregate>
      	</configuration>
      </plugin>

	  <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.9.1</version>
        <reportSets>
         <reportSet>
          <id>aggregate</id>
          <configuration>
	          <aggregate>true</aggregate>
	          <doclet>org.jboss.apiviz.APIviz</doclet>
	          <docletArtifact>
	            <groupId>org.jboss.apiviz</groupId>
	            <artifactId>apiviz</artifactId>
	            <version>1.3.2.GA</version>
	          </docletArtifact>
	          <attach>false</attach>
	          <useStandardDocletOptions>true</useStandardDocletOptions>
	          <outputDirectory>${project.build.directory}/api</outputDirectory>
	          <reportOutputDirectory>${project.build.directory}/api</reportOutputDirectory>
	          <destDir>api</destDir>
	          <charset>UTF-8</charset>
	          <docencoding>UTF-8</docencoding>
	          <breakiterator>true</breakiterator>
	          <version>true</version>
	          <author>true</author>
	          <keywords>true</keywords>
	          <overview>${basedir}/src/javadoc/overview.html</overview>
	          <doctitle>${project.name} ${project.version} API Reference</doctitle>
	          <windowtitle>${project.name} ${project.version} API Reference</windowtitle>
	          <additionalparam>
	            -link http://java.sun.com/javase/6/docs/api/

				-group "Waarp Gateway Http Kernel Common package" "org.waarp.gateway.kernel.commonfile*:org.waarp.gateway.kernel.exception*"
                -group "Waarp Gateway Http Kernel Database package" "org.waarp.gateway.kernel.database*"
                -group "Waarp Gateway Http Kernel Http and Rest packages" "org.waarp.gateway.kernel.http*:org.waarp.gateway.kernel.rest*:org.waarp.gateway.kernel.session*"

	            -sourceclasspath ${basedir}/target/classes
	          </additionalparam>
	          <encoding>UTF-8</encoding>
	          <locale>en_US</locale>
	          <excludePackageNames>${project.groupId}.test*:${project.groupId}.example*:${project.groupId}.util.internal*</excludePackageNames>
          </configuration>
          <reports>
           <report>aggregate</report>
          </reports>
         </reportSet>
        </reportSets>
      </plugin>
	</plugins>
  </reporting>

  <dependencies>
  	<dependency>
  		<groupId>Waarp</groupId>
  		<artifactId>WaarpFtpClient</artifactId>
  		<version>3.0.7</version>
  		<optional>true</optional>
  	</dependency>
  	<dependency>
  		<groupId>Waarp</groupId>
  		<artifactId>WaarpExec</artifactId>
  		<version>3.0.5</version>
  		<optional>true</optional>
  	</dependency>
  	<dependency>
  	    <groupId>joda-time</groupId>
  	    <artifactId>joda-time</artifactId>
  	    <version>2.10.3</version>
  	</dependency>
  	<dependency>
  	    <groupId>ch.qos.logback</groupId>
  	    <artifactId>logback-classic</artifactId>
  	    <version>1.2.3</version>
  	</dependency>
  	<dependency>
  	    <groupId>ch.qos.logback</groupId>
  	    <artifactId>logback-core</artifactId>
  	    <version>1.2.3</version>
  	</dependency>
  	<dependency>
  	    <groupId>io.netty</groupId>
  	    <artifactId>netty-all</artifactId>
  	    <version>4.1.37.Final</version>
  	</dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
